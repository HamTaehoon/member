plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.thham'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.projectlombok:lombok:1.18.38'
	implementation 'org.mapstruct:mapstruct:1.6.3'

	implementation 'com.bucket4j:bucket4j_jdk17-core:8.14.0'

	implementation 'org.apache.httpcomponents.client5:httpclient5:5.5'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	annotationProcessor 'org.projectlombok:lombok:1.18.38'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generatedDir = layout.buildDirectory.dir('generated/sources/annotationProcessor/java/main')

sourceSets {
	main {
		java {
			srcDirs += [ generatedDir ]
		}
	}
}

tasks.withType(JavaCompile) {
	options.annotationProcessorPath = configurations.annotationProcessor
}

clean {
	delete generatedDir
}